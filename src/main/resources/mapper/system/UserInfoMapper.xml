<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.stock.dao.mapper.system.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.jy.stock.dao.entity.system.UserInfo">
    <!--@mbg.generated-->
    <!--@Table user_info-->
    <id column="id" property="id" />
    <result column="user_name" property="userName" />
    <result column="avatar_url" property="avatarUrl" />
    <result column="memo" property="memo" />
    <result column="encrypted_password" property="encryptedPassword" />
    <result column="salt" property="salt" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
    <result column="logic_delete" property="logicDelete" />
  </resultMap>

  <resultMap id="WithRoleResultMap" type="com.jy.stock.pojo.dto.system.UserInfoDTO">
    <id column="id" property="id" />
    <result column="user_name" property="userName" />
    <result column="avatar_url" property="avatarUrl" />
    <result column="memo" property="memo" />
    <result column="encrypted_password" property="encryptedPassword" />
    <result column="salt" property="salt" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
    <result column="logic_delete" property="logicDelete" />
    <collection column="id" property="roles" ofType="java.lang.String" select="com.jy.stock.dao.mapper.system.UserRoleMapper.selectRoleCodesByUserId"/>
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_name, avatar_url, memo, encrypted_password, salt, create_time, update_time, logic_delete
  </sql>

  <sql id="Join_Column_List">
    ui.id, ui.user_name, ui.avatar_url, ui.memo, ui.encrypted_password, ui.salt, ui.create_time, ui.update_time, ui.logic_delete
  </sql>

  <select id="getUserInfoById" resultMap="WithRoleResultMap">
    select <include refid="Base_Column_List"/>
    from user_info
    where id = #{userId}
    and logic_delete = false
  </select>

  <select id="getUserInfoByName" resultMap="WithRoleResultMap">
    select <include refid="Base_Column_List"/>
    from user_info
    where user_name = #{userName}
    and logic_delete = false
  </select>

  <select id="listUserInfoByPage" resultMap="WithRoleResultMap">
    select <include refid="Join_Column_List"/>
    from user_info ui
    left join user_role ur on ui.id = ur.user_id and ui.logic_delete = false and ur.logic_delete = false
    <where>
      <if test="param.userName != null and param.userName != ''">
        ui.user_name like concat('%', #{param2.userName}, '%')
      </if>
      <if test="param.roles != null and param.roles.size() > 0">
        and ur.role_code in
        <foreach collection="param.roles" open="(" close=")" separator="," item="r">
          #{r}
        </foreach>
      </if>
      and ui.logic_delete = false
    </where>
    group by <include refid="Join_Column_List"/>
    order by ui.create_time desc
  </select>

  <select id="batchListUserInfoByUserIds" resultMap="WithRoleResultMap">
    select <include refid="Join_Column_List"/>
    from user_info ui
    left join user_role ur on ui.id = ur.user_id and ui.logic_delete = false and ur.logic_delete = false
    <where>
      ui.id in
      <foreach collection="userIds" open="(" close=")" item="userId" separator=",">
        #{userId}
      </foreach>
      and ui.logic_delete = false
    </where>
    group by <include refid="Join_Column_List"/>
    order by ui.create_time desc
  </select>
</mapper>